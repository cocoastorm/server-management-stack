version: '2'

networks:
  wvc-backend:

volumes:
  db_data:
  portainer_data:

services:
  db:
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - wvc-backend
    image: postgres:13.2
    container_name: wvc-db

  wvc:
    depends_on:
      - db
    ports:
      - "6080:6080"
    volumes:
      - /srv/webvirtcloud-docker
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - wvc-backend
    image: kenlee/webvirtcloud-docker:latest
    container_name: wvc

  wvc-web:
    depends_on:
      - traefik
      - wvc
    volumes_from:
      - wvc:ro
    networks:
      - wvc-backend
    labels:
      traefik.enable: 'true'
      traefik.http.routers.wvc-web.entrypoints: web
      traefik.http.routers.wvc-web.rule: Host(`${WVC_HOST}`)
      traefik.http.services.wvc-web.loadbalancer.server.port: '80'
    image: kenlee/webvirtcloud-docker:web
    container_name: wvc-web

  portainer:
    depends_on:
      - traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      traefik.enable: 'true'
      traefik.http.routers.portainer.entrypoints: web
      traefik.http.routers.portainer.rule: Host(`${PORTAINER_HOST}`)
      traefik.http.services.portainer.loadbalancer.server.port: '9000'
    image: portainer/portainer-ce
    container_name: portainer

  traefik:
    image: traefik:2.4
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
